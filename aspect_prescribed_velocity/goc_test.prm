## First we set up a unit length box model with uniform everything.
set Dimension   = 3
set End time    = 8e6

# Load the signal library.
set Additional shared libraries = ./libprescribed_velocity.so

set Output directory = output-goc_test

subsection Geometry model
  set Model name = box

  subsection Box
    set X extent      = 105000
    set Y extent      = 70000

    # To keep the aspect ratio of our elements close to one, we chose the
    # coarse mesh is such a way that it has more elements in X than in Y
    # direction, in the same ratio as the aspect ratio of the model.
    set X repetitions = 3
    set Y repetitions = 2
  end
end

subsection Initial temperature model
  set Model name = function
end

subsection Boundary velocity model
  set Zero velocity boundary indicators = top
end

subsection Gravity model
  set Model name = vertical
  subsection Vertical
    set Magnitude = 0
  end
end

subsection Material model
  set Model name = simple
end

subsection Mesh refinement
  set Initial global refinement = 7
  set Initial adaptive refinement = 0
end

subsection Postprocess
  set List of postprocessors = visualization
end

## Turn prescribed velocities on
set Prescribe internal velocities = true

subsection Prescribed velocities
  subsection Indicator function
    set Variable names = x,y,t
    # Return where to prescribe u_x; u_y; u_z
    # (last one only used if dimension = 3)
    # 1 if velocity should be prescribed, 0 otherwise
    set Function expression = if(((x>-0.1)&(x<1.9))&(abs(x-(1-y))<.01),1,0); \
                                if(((x>-0.1)&(x<1.9))&(abs(x-(1-y))<.01),1,0)
  end
  subsection Velocity function
    set Variable names = x,y,t
    # Return u_x; u_y; u_z (u_z only used if in 3d)
    set Function expression = 1;-1
  end
end
